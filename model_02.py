# -*- coding: utf-8 -*-
"""model-02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IRlplOUVj9Rg1sC6f17z_5sGkR2y_nS1
"""

import pandas as pd
import seaborn as sns
import tensorflow as tf
from tensorflow import keras
import numpy as np
import matplotlib.pyplot as plt

(x_train,y_train),(x_test,y_test)=keras.datasets.mnist.load_data()

x_train=x_train/255
y_train=y_train/255

index=0
plt.imshow(x_train[index],cmap=plt.cm.binary)
print(y_train[index])

x_train_flat=x_train.reshape(len(x_train),(28*28))
x_test_flat=x_test.reshape(len(x_test),(28*28))

model=keras.Sequential([
    keras.layers.Dense(128,input_shape=(784,),activation='relu'),
    keras.layers.Dense(64,input_shape=(784,),activation='sigmoid'),
    keras.layers.Dense(32,input_shape=(784,),activation='sigmoid'),
    keras.layers.Dense(10,input_shape=(784,),activation='softmax'),
])

model.compile(
    optimizer='adam',
    loss='sparse_categorical_crossentropy',
    metrics=['accuracy']
)
model.fit(x_train_flat,y_train,epochs=5)

model.evaluate(x_test_flat,y_test)

y_pred=model.predict(x_test_flat)
y_pred_labels=[np.argmax(i) for i in y_pred]

confusion_matrix=tf.math.confusion_matrix(labels=y_test,predictions=y_pred_labels)
sns.heatmap(confusion_matrix,annot=True,fmt='d')